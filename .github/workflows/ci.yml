name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Build and test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: ['1.18.1']
        otp: ['27.1.2']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
          ~/.cache/pip
        key: ${{ runner.os }}-mix-pip-${{ hashFiles('**/mix.lock', 'priv/python/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-mix-pip-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Install Python dependencies
      run: pip install -r priv/python/requirements.txt

    - name: Check formatting
      run: mix format --check-formatted

    - name: Compile
      run: mix compile --warnings-as-errors

    - name: Run tests
      run: mix test --exclude skip_ci

    - name: Restore PLT cache
      uses: actions/cache@v4
      id: plt_cache
      with:
        key: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        restore-keys: ${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-plt
        path: priv/plts

    - name: Create PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true'
      run: mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --format github